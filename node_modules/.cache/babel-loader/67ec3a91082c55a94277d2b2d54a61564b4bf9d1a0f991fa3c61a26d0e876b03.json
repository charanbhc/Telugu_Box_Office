{"ast":null,"code":"var _jsxFileName = \"/Users/charanbhc/boxoffice/src/pages/APTG.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"../components/Navbar\"; // Assuming you have a Navbar component\nimport \"./APTG.css\"; // Custom styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction APTG() {\n  _s();\n  const [openDropdown, setOpenDropdown] = useState(\"\"); // Track the currently open dropdown\n\n  // Data for categories\n  const categories = {\n    \"Anantapur Town Day 1 All Time Records\": [\"Simha  10.63L\", \"Orange   11.65L\", \"Dookudu  14.32L\", \"Oosaravelli   17.45L\", \"Baahubali  23.74L\", \"SGS  28.63L\", \"Khaidino150   29.82L\", \"Baahubali2   53.3L\", \"RRR  85.26L\", \"Devara   92.94L\"],\n    \"Guntakal Town Top Grossers\": [\"RRR  1.31Cr\", \"Baahubali2   90.8L\", \"Baahubali   63.4L\", \"Pushpa2   63L+(17D)\", \"Devara   60L\", \"Rangasthalam  58.5L\", \"Akhanda   56.6L\", \"SyeRaa  51.6L\", \"AVPL   50.5L\", \"Pushpa   49.2L\"]\n    // Add more categories as needed...\n  };\n  const categoryKeys = Object.keys(categories);\n  const handleToggle = category => {\n    setOpenDropdown(prev => prev === category ? \"\" : category);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aptg-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"APTG Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: categoryKeys.slice(0, 8).map((category, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"category-button\",\n          onClick: () => handleToggle(category),\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), openDropdown === category && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"data-list\",\n            children: categories[category].map((record, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"data-item\",\n              children: record\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(APTG, \"ytxzhTBSg4wtUKSEcg0C9T3m5Jc=\");\n_c = APTG;\nexport default APTG;\nvar _c;\n$RefreshReg$(_c, \"APTG\");","map":{"version":3,"names":["React","useState","Navbar","jsxDEV","_jsxDEV","APTG","_s","openDropdown","setOpenDropdown","categories","categoryKeys","Object","keys","handleToggle","category","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","index","onClick","record","_c","$RefreshReg$"],"sources":["/Users/charanbhc/boxoffice/src/pages/APTG.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"../components/Navbar\"; // Assuming you have a Navbar component\nimport \"./APTG.css\"; // Custom styling\n\nfunction APTG() {\n  const [openDropdown, setOpenDropdown] = useState(\"\"); // Track the currently open dropdown\n\n  // Data for categories\n  const categories = {\n    \"Anantapur Town Day 1 All Time Records\": [\n      \"Simha  10.63L\",\n      \"Orange   11.65L\",\n      \"Dookudu  14.32L\",\n      \"Oosaravelli   17.45L\",\n      \"Baahubali  23.74L\",\n      \"SGS  28.63L\",\n      \"Khaidino150   29.82L\",\n      \"Baahubali2   53.3L\",\n      \"RRR  85.26L\",\n      \"Devara   92.94L\",\n    ],\n    \"Guntakal Town Top Grossers\": [\n      \"RRR  1.31Cr\",\n      \"Baahubali2   90.8L\",\n      \"Baahubali   63.4L\",\n      \"Pushpa2   63L+(17D)\",\n      \"Devara   60L\",\n      \"Rangasthalam  58.5L\",\n      \"Akhanda   56.6L\",\n      \"SyeRaa  51.6L\",\n      \"AVPL   50.5L\",\n      \"Pushpa   49.2L\",\n    ],\n    // Add more categories as needed...\n  };\n\n  const categoryKeys = Object.keys(categories);\n\n  const handleToggle = (category) => {\n    setOpenDropdown((prev) => (prev === category ? \"\" : category));\n  };\n\n  return (\n    <div className=\"aptg-container\">\n      <Navbar />\n      <h1 className=\"title\">APTG Records</h1>\n      <div className=\"buttons-container\">\n        {categoryKeys.slice(0, 8).map((category, index) => (\n          <div key={index} className=\"category-section\">\n            <button\n              className=\"category-button\"\n              onClick={() => handleToggle(category)}\n            >\n              {category}\n            </button>\n            {openDropdown === category && (\n              <div className=\"dropdown\">\n                <ul className=\"data-list\">\n                  {categories[category].map((record, index) => (\n                    <li key={index} className=\"data-item\">\n                      {record}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default APTG;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}